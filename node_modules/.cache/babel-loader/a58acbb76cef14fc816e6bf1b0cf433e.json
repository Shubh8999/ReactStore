{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useMakeRequest = endpoint => {\n  _s();\n\n  const [result, setResult] = useState({\n    data: null,\n    error: null\n  });\n  useEffect(() => {\n    const asyncFunc = async () => {\n      try {\n        const response = await fetch(endpoint);\n        const json = await response.json();\n        setResult(old => ({ ...old,\n          data: json\n        }));\n      } catch (error) {\n        setResult(old => ({ ...old,\n          error: new Error(error).message\n        }));\n      }\n    };\n\n    asyncFunc();\n  }, [endpoint]);\n  return result;\n};\n\n_s(useMakeRequest, \"OZFjoTRVN3zHqEmgPT9mfDNBFZM=\");\n\nexport default useMakeRequest;","map":{"version":3,"sources":["D:/My Projects/React-Store-main/React-Store-main/src/hooks/useMakeRequest.js"],"names":["useState","useEffect","useMakeRequest","endpoint","result","setResult","data","error","asyncFunc","response","fetch","json","old","Error","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAIC,QAAD,IAAc;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCM,IAAAA,IAAI,EAAE,IAD6B;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAApC;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAD,CAA5B;AACA,cAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAN,QAAAA,SAAS,CAAEO,GAAD,KAAU,EAAE,GAAGA,GAAL;AAAUN,UAAAA,IAAI,EAAEK;AAAhB,SAAV,CAAD,CAAT;AACD,OAJD,CAIE,OAAOJ,KAAP,EAAc;AACdF,QAAAA,SAAS,CAAEO,GAAD,KAAU,EAAE,GAAGA,GAAL;AAAUL,UAAAA,KAAK,EAAE,IAAIM,KAAJ,CAAUN,KAAV,EAAiBO;AAAlC,SAAV,CAAD,CAAT;AACD;AACF,KARD;;AAUAN,IAAAA,SAAS;AACV,GAZQ,EAYN,CAACL,QAAD,CAZM,CAAT;AAcA,SAAOC,MAAP;AACD,CArBD;;GAAMF,c;;AAuBN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useMakeRequest = (endpoint) => {\n  const [result, setResult] = useState({\n    data: null,\n    error: null,\n  });\n\n  useEffect(() => {\n    const asyncFunc = async () => {\n      try {\n        const response = await fetch(endpoint);\n        const json = await response.json();\n        setResult((old) => ({ ...old, data: json }));\n      } catch (error) {\n        setResult((old) => ({ ...old, error: new Error(error).message }));\n      }\n    };\n\n    asyncFunc();\n  }, [endpoint]);\n\n  return result;\n};\n\nexport default useMakeRequest;\n"]},"metadata":{},"sourceType":"module"}